!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
API	api.py	/^class API(object):$/;"	c
API	sqlalchemy_as.py	/^from api import API$/;"	i
Base	person.py	/^Base = declarative_base()$/;"	v
Column	person.py	/^from sqlalchemy import Column, Integer, String, create_engine$/;"	i
Integer	person.py	/^from sqlalchemy import Column, Integer, String, create_engine$/;"	i
Person	api.py	/^from person import Person$/;"	i
Person	person.py	/^class Person(Base):$/;"	c
Person	sqlalchemy_as.py	/^from person import Person$/;"	i
String	person.py	/^from sqlalchemy import Column, Integer, String, create_engine$/;"	i
__init__	api.py	/^    def __init__(self):$/;"	m	class:API
__tablename__	person.py	/^    __tablename__ = 'person'$/;"	v	class:Person
api	sqlalchemy_as.py	/^    api = API()$/;"	v
connect	api.py	/^connect = 'mysql:\/\/nova:2c66a6cf3e@10.0.0.3\/nova_api'$/;"	v
create_engine	api.py	/^from sqlalchemy import create_engine, text$/;"	i
create_engine	person.py	/^from sqlalchemy import Column, Integer, String, create_engine$/;"	i
declarative_base	person.py	/^from sqlalchemy.ext.declarative import declarative_base$/;"	i
delete	api.py	/^    def delete(self, person_id):$/;"	m	class:API
exc	api.py	/^from sqlalchemy.orm import sessionmaker, exc$/;"	i
id	person.py	/^    id = Column(Integer, primary_key=True)$/;"	v	class:Person
name	person.py	/^    name = Column(String(250), nullable=False)$/;"	v	class:Person
person	sqlalchemy_as.py	/^    person = Person(id='1', name='Mamba_1_2_1')$/;"	v
query	api.py	/^    def query(self, person_id):$/;"	m	class:API
save	api.py	/^    def save(self, person):$/;"	m	class:API
sessionmaker	api.py	/^from sqlalchemy.orm import sessionmaker, exc$/;"	i
text	api.py	/^from sqlalchemy import create_engine, text$/;"	i
update	api.py	/^    def update(self, person):$/;"	m	class:API
